function fnFormatDetails ( oTable, nTr ){    var aData = oTable.fnGetData( nTr );    var sOut = '<table cellpadding="5" cellspacing="0" border="0" style="padding-left:50px;">';    sOut += '<tr><td>Rendering engine:</td><td>'+aData[1]+' '+aData[4]+'</td></tr>';    sOut += '<tr><td>Link to source:</td><td>Could provide a link here</td></tr>';    sOut += '<tr><td>Extra info:</td><td>And any further details here (images etc)</td></tr>';    sOut += '</table>';    return sOut;}/* Create an array with the values of all the input boxes in a column, parsed as numbers */$(document).ready(function() {//var current_sortorder;function eventFired ( type ) {        current_sortorder = $("#dynamic-table #report-table #sales-table").dataTable().fnSettings().aaSorting[0][1];        //alert (current_sortorder);    }    $('#sales-table').DataTable( {         "aaSorting": [[ 0, "desc" ]]    });    if($( "#dynamic-table" ).length){    totCOl = $( "#dynamic-table" ).find('tr')[0].cells.length;     if(totCOl != 0 && totCOl != 'NaN'){        totCOl = parseInt(totCOl) - 1;    }}               /*$('#dynamic-table, #report-table')   			//.on( 'order.dt',  function () { eventFired( 'Order' ); } )   			.DataTable( { 			        "aaSorting": [[ 0, "asc" ]],                                "aoColumnDefs": [{ "bSortable": false, "aTargets": [totCOl] }]   			        /*"aoColumnDefs": [ 			        					{ "bSortable": true, "aTargets": [ 0 ] },			        					{  "asSorting": [ "asc" ], "aTargets": [ 0 ] },					          			{  "sType": "string", "aTargets": [ 0 ] }					          		]				} );*///    $('#report-table').dataTable( {////	"aaSorting": [[ 0, "asc" ]],//        "buttons": [{extend: 'csv',title: 'subscription',}]                      //    } );                               /*     * Insert a 'details' column to the table     */    var nCloneTh = document.createElement( 'th' );    var nCloneTd = document.createElement( 'td' );    nCloneTd.innerHTML = "<img src='"+IMAGE_URL+"details_open.png'>";    nCloneTd.className = "center";    $('#hidden-table-info thead tr').each( function () {        this.insertBefore( nCloneTh, this.childNodes[0] );    } );    $('#hidden-table-info tbody tr').each( function () {        this.insertBefore(  nCloneTd.cloneNode( true ), this.childNodes[0] );    } );    /*     * Initialse DataTables, with no sorting on the 'details' column     */    var oTable = $('#hidden-table-info').dataTable( {        "aoColumnDefs": [            { "bSortable": false, "aTargets": [ 0 ] }        ],        "aaSorting": [[1, 'asc']]    });    /* Add event listener for opening and closing details     * Note that the indicator for showing which row is open is not controlled by DataTables,     * rather it is done here     */    $(document).on('click','#hidden-table-info tbody td img',function () {        var nTr = $(this).parents('tr')[0];        if ( oTable.fnIsOpen(nTr) )        {            /* This row is already open - close it */            this.src = IMAGE_URL+"details_open.png";            oTable.fnClose( nTr );        }        else        {            /* Open this row */            this.src = IMAGE_URL+"details_close.png";            oTable.fnOpen( nTr, fnFormatDetails(oTable, nTr), 'details' );        }    } );} );