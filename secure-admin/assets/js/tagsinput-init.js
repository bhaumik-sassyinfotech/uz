//tag inputfunction onAddTag(tag) {//    alert("Added a tag: " + tag);    displayAlert("Added a tag: " + tag);}function onRemoveTag(tag) {	var tags_name = $('#blog_tags_name').val();		//var id = $(this).attr('id');alert (id);//	alert("Removed a tag: " + tag);	displayAlert("Removed a tag: " + tag);}function onChangeTag(input,tag) {//    alert("Changed a tag: " + tag);    displayAlert("Changed a tag: " + tag);}$(function() {    $('#tags_1').tagsInput({width:'auto'});    $('#blog_tags_id').tagsInput({width:'auto'});    $('#blog_tags_name').tagsInput({    	width:'auto',    	itemValue: 'id',         itemText: 'label',    	onRemoveTag:onRemoveTag    });    //$('#blog_tags_name').tagsInput('add', { id: 'tag id', label: 'tag lable' });    $('#tags_2').tagsInput({        width: '250',        onChange: function(elem, elem_tags)        {            var languages = ['php','ruby','javascript'];            $('.tag', elem_tags).each(function()            {                if($(this).text().search(new RegExp('\\b(' + languages.join('|') + ')\\b')) >= 0)                    $(this).css('background-color', 'yellow');            });        }    });    // Uncomment this line to see the callback functions in action    			//$('input.tags').tagsInput({onAddTag:onAddTag,onRemoveTag:onRemoveTag,onChange: onChangeTag});    			    // Uncomment this line to see an input with no interface for adding new tags.    //			$('input.tags').tagsInput({interactive:false});});