<?phpif (!defined('BASEPATH'))    exit('No direct script access allowed');class Group extends CI_Controller {    function __construct() {        parent::__construct();//        if ($this->aauth->is_loggedin() == FALSE) {//            redirect('account');//        }    }    public function index() {        $data['Module'] = "Group";        $data['dataList'] = $this->aauth->list_groups(true, array('is_deleted' => 0 , 'group_id >' => 1));        $this->load->view('templates/header', $data);        $this->load->view('group/view', $data);        $this->load->view('templates/footer', $data);    }    function addEdit($id = 0) {        $data = array();        if ($id) {            $groupData = $this->aauth->get_group($id, array('is_deleted' => 0));            if (!empty($groupData))                $data = $groupData;            else                redirect('group');            $data['action'] = "edit";        } else            $data['action'] = "add";        $data['Module'] = "Group";        if ($this->input->post()) {            $privileges_array = json_decode(privileges_array);            $privileges = array();            if (isset($_POST['privileges'])) {                $post_privileges = $_POST['privileges'];                foreach ($privileges_array as $key => $value) {                    if (array_key_exists($key, $post_privileges)) {                        foreach ($value as $k => $v) {                            if (array_key_exists($k, $post_privileges[$key])) {                                $privileges[$key][$k] = isset($post_privileges[$key][$k]) ? 1 : 0;                            } else {                                $privileges[$key][$k] = 0;                            }                        }                    } else {                        foreach ($value as $k => $v) {                            $privileges[$key][$k] = 0;                        }                    }                }            } else {                foreach ($privileges_array as $key => $value) {                    foreach ($value as $k => $v) {                        $privileges[$key][$k] = 0;                    }                }            }            $privileges = json_encode($privileges);            $data = array(                'group_name' => $this->input->post('group_name'),                'group_privilege' => $privileges,            );            $groupID = $this->input->post('group_id');            if ($groupID) {                $data['group_modified_date'] = date('Y-m-d H:i:s');                $optresult = $this->aauth->update_group($groupID, $data);                $action = "updated";            } else {                $data['group_created_date'] = date('Y-m-d H:i:s');                $optresult = $this->aauth->create_group($data);                $action = "added";            }            if ($optresult)                $this->session->set_flashdata('addUpdMsg', "Group is " . $action . " successfully");            else                $this->session->set_flashdata('addUpdMsg', "Group is not " . $action . " successfully");            redirect('group');        }        $this->load->view('templates/header', $data);        $this->load->view('group/addedit', $data);        $this->load->view('templates/footer', $data);    }    public function delete() {        $group_id = $this->uri->segment(3);        $result = $this->aauth->delete_group($group_id);        if ($result)            $this->session->set_flashdata('DeleteSuccMsg', 'Group is deleted successfully.');        else            $this->session->set_flashdata('DeleteSuccMsg', 'Group is not deleted successfully.');        redirect('Group');    }    function checkName() {        $returnArr = array();        if ($this->input->post('field_value')) {            $gname = $this->input->post('field_value');            $gid = $this->input->post('unique_id');            $condition = array('group_name' => $gname,'is_deleted'=>0);            if ($gid)                $condition['group_id <>'] = $gid;            $result = GetAllRecord('user_group', $condition);            if (count($result))                $returnArr['result'] = false;            else                $returnArr['result'] = true;        } else            $returnArr['result'] = true;        echo json_encode($returnArr);    }}?>