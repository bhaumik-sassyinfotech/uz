<?phpdefined('BASEPATH') OR exit('No direct script access allowed');class Users extends CI_Controller {    function __construct() {        parent::__construct();    }    public function index() {        $data['Module'] = "User";        $data['dataList'] = $this->aauth->list_users($this->session->userdata('admin_id'), false);        $this->load->view('templates/header', $data);        $this->load->view('users/view', $data);        $this->load->view('templates/footer', $data);    }    function addEdit($id = 0) {        $data = array();        if ($id) {            $userData = $this->aauth->get_user($id);            if (!empty($userData))                $data = $userData;            else                redirect('users');            $data['action'] = "edit";        } else            $data['action'] = "add";        $data['Module'] = "User";        $data['groupData'] = $this->aauth->list_groups(true, array('is_deleted' => 0));        if ($this->input->post()) {            $data = array(                'first_name' => $this->input->post('first_name'),                'last_name' => $this->input->post('last_name'),                'email' => $this->input->post('email'),                'mobileno' => $this->input->post('mobileno'),                'password' => $this->input->post('user_password'),                'group_id' => $this->input->post('group_id'),                'status' => $this->input->post('status'),                'modified_date' => date("Y-m-d H:i:s")            );            if (!empty($_FILES['image']['name'])) {                $fileName = $_FILES['image']['name'];                $upload = uploadFile('image', 'img', 'users', $fileName);                $old_image = $this->input->post('old_image');                if ($old_image != '' && file_exists(UPLOAD_ON_ROOT . "/users/" . $old_image))                    unlink(UPLOAD_ON_ROOT . "/users/" . $old_image);                if (!empty($upload) && $upload['success'] == true)                    $data['image'] = $upload['path'];            }            $userID = $this->input->post('user_id');            if ($userID) { /* Edit Data */                $optresult = $this->aauth->update_user($userID, $data);                $action = "updated";            } else { /* Add Data */				$data['created_date'] = date("Y-m-d H:i:s");                $optresult = $this->aauth->create_user($data);                $action = "added";            }            if ($optresult)                $this->session->set_flashdata('addUpdMsg', "User has been " . $action . " successfully.");            else                $this->session->set_flashdata('addUpdMsg', "User is not " . $action . " successfully.");            redirect('users');        }        $this->load->view('templates/header', $data);        $this->load->view('users/addedit', $data);        $this->load->view('templates/footer', $data);    }    public function delete() {        $user_id = $this->uri->segment(3);        $result = $this->aauth->delete_user($user_id);        if ($result)            $this->session->set_flashdata('DeleteSuccMsg', 'User has been deleted successfully.');        else            $this->session->set_flashdata('DeleteSuccMsg', 'User is not deleted successfully.');        redirect('users');    }    function checkEmail() {        $returnArr = array();        if ($this->input->post('field_value')) {            $email = $this->input->post('field_value');            $user_id = $this->input->post('unique_id');            $condition = array('email' => $email, 'is_deleted' => 0);            if ($user_id)                $condition['user_id <>'] = $user_id;            $result = GetAllRecord('users', $condition);            if (count($result))                $returnArr['result'] = false;            else                $returnArr['result'] = true;        } else            $returnArr['result'] = true;        echo json_encode($returnArr);    }}?>